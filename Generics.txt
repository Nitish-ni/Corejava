Generics

1.package ForNumber;

import java.util.HashSet;

public class ForHasset {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		HashSet <String> Employee = new HashSet<String>();
		
		Employee.add("Nitish Kumar");
		Employee.add("7981565119");
		Employee.add("CG");
		Employee.add("Naturality");
		Employee.add("Good Employee");
		Employee.add("Hyderabad");
		Employee.add("Mumbai");
		Employee.add("Chennai");
		Employee.add("Hyderabad");
		Employee.add(null);
		
		System.out.println(Employee);
		

	}
}


2.package ForNumber;

import java.util.HashMap;
import java.util.Map;

public class genericsforhashmap {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Map<Integer, Double > employee = new HashMap<>();
		
		employee.put(1, 10.34);
		employee.put(3, 34.56);
		employee.put(4, 12.56);
		employee.put(8, 45.789);
		employee.put(9, 123.56);
		employee.put(2, 78.65);
		employee.put(5, 67.543);
		employee.put(3, 43.23);
		employee.put(2, 34.567);
		employee.put(6, 789.95);
		
		System.out.println(employee);

	}

}

3.

package ForNumber;

public class fortwopoastionsarray {
	
	public static void main(String[] args) {
		Integer[] b = {1,2,5,6,7};
		swap(b,1,3);
		
		for(Integer i:b) {
			System.out.println(i+" ");
		}
			
		
	}


     public static <T> void swap(T[] a, int i, int j) 
	{
		T temp = a[i];
		a[i] = a[j];
		a[j] = temp;
		
		System.out.println(temp);
	}
		

	}


